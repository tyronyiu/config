{
  "version": 3,
  "sources": ["../src/directionsTo.tsx", "../src/utils.ts"],
  "sourcesContent": ["import { Form, ActionPanel, Icon, getPreferenceValues, popToRoot, Action } from \"@raycast/api\";\nimport { useState } from \"react\";\nimport { TransportType, makeDirectionsURL, Preferences } from \"./utils\";\n\nenum orginOption {\n  Home = \"home\",\n  CurLoc = \"\",\n  Custom = \"custom\",\n}\n\nexport default function Command() {\n  const preferences: Preferences = getPreferenceValues();\n\n  // Used to handle what the Form displays.\n  const [origin, setOrigin] = useState<string>(\"home\");\n  // Used to handle what is submitted to the Apple Maps API.\n  const [originAddress, setOriginAddress] = useState<string>(\"\");\n  const [destination, setDestination] = useState<string>(\"\");\n  const [mode, setMode] = useState<string>(preferences.preferredMode);\n\n  const handleOriginChange = (value: string) => {\n    if (value === orginOption.Home) {\n      setOriginAddress(preferences.homeAddress);\n      setOrigin(orginOption.Home);\n    } else if (value === orginOption.CurLoc) {\n      setOriginAddress(\"\");\n      setOrigin(orginOption.CurLoc);\n    } else {\n      setOriginAddress(\"\");\n      setOrigin(orginOption.Custom);\n    }\n  };\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.OpenInBrowser\n            url={makeDirectionsURL(originAddress, destination, mode)}\n            icon={Icon.Map}\n            title=\"Open in Apple Maps\"\n            onOpen={() => popToRoot()}\n          />\n          <Action.CopyToClipboard\n            content={makeDirectionsURL(originAddress, destination, mode)}\n            icon={Icon.Clipboard}\n            onCopy={() => popToRoot()}\n          />\n        </ActionPanel>\n      }\n    >\n      <Form.TextField\n        id=\"destination\"\n        title=\"Destination\"\n        placeholder=\"Name or Address\"\n        value={destination}\n        onChange={setDestination}\n      />\n      <Form.Separator />\n      <Form.Dropdown id=\"origin\" title=\"Origin\" value={origin} onChange={handleOriginChange}>\n        <Form.Dropdown.Item value={orginOption.Home} title=\"Home\" icon={Icon.House} />\n        <Form.Dropdown.Item value={orginOption.CurLoc} title=\"Current Location\" icon={Icon.Geopin} />\n        <Form.Dropdown.Item value={orginOption.Custom} title=\"Custom Address\" icon={Icon.Pencil} />\n      </Form.Dropdown>\n      {origin === orginOption.Custom && (\n        <Form.TextField\n          id=\"originAddress\"\n          title=\"Origin Address\"\n          placeholder=\"Name or Address\"\n          value={originAddress}\n          onChange={setOriginAddress}\n        />\n      )}\n      <Form.Dropdown id=\"transport-type\" title=\"Transport Type\" value={mode} onChange={setMode}>\n        <Form.Dropdown.Item value={TransportType.Driving} title=\"Driving\" icon={Icon.Car} />\n        <Form.Dropdown.Item value={TransportType.Walking} title=\"Walking\" icon={Icon.Footprints} />\n        <Form.Dropdown.Item value={TransportType.Transit} title=\"Transit\" icon={Icon.Train} />\n        <Form.Dropdown.Item value={TransportType.Cycling} title=\"Cycling\" icon={Icon.Bike} />\n      </Form.Dropdown>\n    </Form>\n  );\n}\n", "/**\n * Corresponds to Apple Map's four possible modes of travel.\n */\nexport enum TransportType {\n  Driving = \"d\",\n  Walking = \"w\",\n  Transit = \"r\",\n  Cycling = \"c\",\n}\n\n/**\n * Corresponds to the preferences defined in package.json.\n */\nexport interface Preferences {\n  homeAddress: string;\n  preferredMode: string;\n}\n\n/**\n * Given an origin, a destination, and a travel mode, returns a direction url according to the following specs:\n * https://developer.apple.com/library/archive/featuredarticles/iPhoneURLScheme_Reference/MapLinks/MapLinks.html\n *\n * @param origin The origin address\n * @param destination The destination address\n * @param transportType One of four possible travel modes\n * @returns A properly URI encoded string according to Apple Maps documentation\n */\nexport function makeDirectionsURL(origin: string, destination: string, transportType: string): string {\n  const mapsBase = \"maps://\";\n  return (\n    mapsBase +\n    \"?saddr=\" +\n    encodeURI(origin) +\n    \"&daddr=\" +\n    encodeURI(destination) +\n    \"&dirflg=\" +\n    encodeURI(transportType)\n  );\n}\n\n/**\n * Given a query string, returns search url according to the following specs:\n * https://developer.apple.com/library/archive/featuredarticles/iPhoneURLScheme_Reference/MapLinks/MapLinks.html\n *\n * @param query The query address\n * @returns A properly URI encoded string according to Apple Maps documentation\n */\nexport function makeSearchURL(query: string): string {\n  const mapsBase = \"maps://\";\n  return mapsBase + \"?q=\" + encodeURI(query);\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAgF,wBAChFC,EAAyB,iBC0BlB,SAASC,EAAkBC,EAAgBC,EAAqBC,EAA+B,CAEpG,MADiB,UAGf,UACA,UAAUF,CAAM,EAChB,UACA,UAAUC,CAAW,EACrB,WACA,UAAUC,CAAa,CAE3B,CDtCA,IAAAC,EAAA,6BAUe,SAARC,GAA2B,CAChC,IAAMC,KAA2B,uBAAoB,EAG/C,CAACC,EAAQC,CAAS,KAAI,YAAiB,MAAM,EAE7C,CAACC,EAAeC,CAAgB,KAAI,YAAiB,EAAE,EACvD,CAACC,EAAaC,CAAc,KAAI,YAAiB,EAAE,EACnD,CAACC,EAAMC,CAAO,KAAI,YAAiBR,EAAY,aAAa,EAE5DS,EAAsBC,GAAkB,CACxCA,IAAU,QACZN,EAAiBJ,EAAY,WAAW,EACxCE,EAAU,MAAgB,GACjBQ,IAAU,IACnBN,EAAiB,EAAE,EACnBF,EAAU,EAAkB,IAE5BE,EAAiB,EAAE,EACnBF,EAAU,QAAkB,EAEhC,EAEA,SACE,QAAC,QACC,WACE,QAAC,eACC,oBAAC,SAAO,cAAP,CACC,IAAKS,EAAkBR,EAAeE,EAAaE,CAAI,EACvD,KAAM,OAAK,IACX,MAAM,qBACN,OAAQ,OAAM,aAAU,EAC1B,KACA,OAAC,SAAO,gBAAP,CACC,QAASI,EAAkBR,EAAeE,EAAaE,CAAI,EAC3D,KAAM,OAAK,UACX,OAAQ,OAAM,aAAU,EAC1B,GACF,EAGF,oBAAC,OAAK,UAAL,CACC,GAAG,cACH,MAAM,cACN,YAAY,kBACZ,MAAOF,EACP,SAAUC,EACZ,KACA,OAAC,OAAK,UAAL,EAAe,KAChB,QAAC,OAAK,SAAL,CAAc,GAAG,SAAS,MAAM,SAAS,MAAOL,EAAQ,SAAUQ,EACjE,oBAAC,OAAK,SAAS,KAAd,CAAmB,MAAO,OAAkB,MAAM,OAAO,KAAM,OAAK,MAAO,KAC5E,OAAC,OAAK,SAAS,KAAd,CAAmB,MAAO,GAAoB,MAAM,mBAAmB,KAAM,OAAK,OAAQ,KAC3F,OAAC,OAAK,SAAS,KAAd,CAAmB,MAAO,SAAoB,MAAM,iBAAiB,KAAM,OAAK,OAAQ,GAC3F,EACCR,IAAW,aACV,OAAC,OAAK,UAAL,CACC,GAAG,gBACH,MAAM,iBACN,YAAY,kBACZ,MAAOE,EACP,SAAUC,EACZ,KAEF,QAAC,OAAK,SAAL,CAAc,GAAG,iBAAiB,MAAM,iBAAiB,MAAOG,EAAM,SAAUC,EAC/E,oBAAC,OAAK,SAAS,KAAd,CAAmB,UAA8B,MAAM,UAAU,KAAM,OAAK,IAAK,KAClF,OAAC,OAAK,SAAS,KAAd,CAAmB,UAA8B,MAAM,UAAU,KAAM,OAAK,WAAY,KACzF,OAAC,OAAK,SAAS,KAAd,CAAmB,UAA8B,MAAM,UAAU,KAAM,OAAK,MAAO,KACpF,OAAC,OAAK,SAAS,KAAd,CAAmB,UAA8B,MAAM,UAAU,KAAM,OAAK,KAAM,GACrF,GACF,CAEJ",
  "names": ["directionsTo_exports", "__export", "Command", "__toCommonJS", "import_api", "import_react", "makeDirectionsURL", "origin", "destination", "transportType", "import_jsx_runtime", "Command", "preferences", "origin", "setOrigin", "originAddress", "setOriginAddress", "destination", "setDestination", "mode", "setMode", "handleOriginChange", "value", "makeDirectionsURL"]
}
